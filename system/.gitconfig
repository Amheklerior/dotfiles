[init]
	defaultBranch = main

[pull]
	# git pull works as git pull --rebase by default
	rebase = true

[rerere]
	# enable "reuse recorded resolutions" to avoid solving the same conflicts
	# over and over again during rebase operations on long-living branches
	# https://git-scm.com/book/en/v2/Git-Tools-Rerere
	enabled = true

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[core]
	# make rebasing safer on macOS
	# https://www.git-tower.com/blog/make-git-rebase-safe-on-osx
	trustctime = false

	# prevent showing files which filenames contains non-ASCII as untracked
	# https://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
	precomposeunicode = false

	# speed up commands that involve determining untracked files such as git status
	# https://git-scm.com/docs/git-update-index#_untracked_cache
	untrackedCache = true

	# use git-delta as pager
	pager = delta

[interactive]
	diffFilter = delta --color-only

[merge]
	conflictstyle = zdiff3

[delta]
	# use n/N to navigate between diff sections
	navigate = true

	# show line numbers
	line-numbers = true

	# No hunk header
	hunk-header-style = omit

[alias]
	# commit amend shortcut
	amend = commit --amend --reuse-message=HEAD
	
	# list all git aliases
	aliases = !git config --get-regex alias | sed -e 's/alias\\.//g' -e 's/\\([a-zA-Z]*\\) /\\1\\t---\\t/'
	
	# check if on personal or work git account
	whoami = !git config --get-regex 'user.(name|email)' | sed -e 's/user\\.\\([a-zA-Z]*\\) /\\1:\\t/'

	# worktree shortcut
	wt = worktree

	# stash staged files with a comment
	park = stash --staged -m

	# unstash selected changes (preserve stash entry)
	peek = !git stash list | fzf | git stash apply

	# unstash selected changes (delete stash entry)
	pop = !git stash list | fzf | git stash pop
	
	# set personal git account name/email 
	set-personal = !git config user.name 'Amheklerior' && git config user.email '49590425+Amheklerior@users.noreply.github.com'

	# set work git account name/email 
	set-work = !git config user.name 'Andrea Amato' && git config user.email 'andrea.amato@moneyfarm.com'

	# changes author of all commits in the git history (you must call set-personal/set-work first)
	switch-author = !git rebase -r --root --exec "git commit --amend --no-edit --reset-author"
